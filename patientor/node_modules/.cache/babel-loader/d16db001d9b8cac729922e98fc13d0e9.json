{"ast":null,"code":"var _jsxFileName = \"/Users/abigailnottingham/HTML Projects/fullstack_open/part9_c_patientor_frontend/patientor/src/AddEntryModal/AddEntryForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid, Button } from \"semantic-ui-react\";\nimport { Field, Formik, Form } from \"formik\";\nimport { TextField, SelectField, DiagnosisSelection } from \"./FormField\";\nimport { EntryTypes, HealthCheckRating } from \"../types\";\nimport { useStateValue } from \"../state\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst typeOptions = [{\n  value: EntryTypes.Healthcheck,\n  label: \"Healthcheck\"\n}, {\n  value: EntryTypes.Hospital,\n  label: \"Hospital\"\n}, {\n  value: EntryTypes.OccupationalHealthcare,\n  label: \"Occupational Healthcare\"\n}];\nconst ratingOptions = [{\n  value: HealthCheckRating.Healthy,\n  label: \"Healthy\"\n}, {\n  value: HealthCheckRating.LowRisk,\n  label: \"Low Risk\"\n}, {\n  value: HealthCheckRating.HighRisk,\n  label: \"High Risk\"\n}, {\n  value: HealthCheckRating.CriticalRisk,\n  label: \"Critcal Risk\"\n}];\nexport const AddEntryForm = _ref => {\n  _s();\n\n  let {\n    onSubmit,\n    onCancel\n  } = _ref;\n  const [{\n    diagnoses\n  }] = useStateValue();\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      type: \"HealthCheck\",\n      healthCheckRating: 0,\n      // type: EntryTypes.Healthcheck,\n      // healthCheckRating: HealthCheckRating.Healthy,\n      description: \"\",\n      date: \"\",\n      specialist: \"\"\n    },\n    onSubmit: onSubmit,\n    validate: values => {\n      const requiredError = \"Field is required\";\n      const errors = {};\n\n      if (!values.description) {\n        errors.description = requiredError;\n      }\n\n      if (!values.date) {\n        errors.date = requiredError;\n      }\n\n      if (!values.specialist) {\n        errors.specialist = requiredError;\n      }\n\n      return errors;\n    },\n    children: _ref2 => {\n      let {\n        isValid,\n        dirty,\n        setFieldValue,\n        setFieldTouched,\n        values\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Form, {\n        className: \"form ui\",\n        children: [/*#__PURE__*/_jsxDEV(SelectField, {\n          label: \"Type\",\n          name: \"type\",\n          options: typeOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), values.type === \"HealthCheck\" && /*#__PURE__*/_jsxDEV(SelectField, {\n          label: \"HealthCheckRating\",\n          name: \"healthCheckRating\",\n          options: ratingOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          label: \"Description\",\n          placeholder: \"Describe any symptoms or notes from the appt\",\n          name: \"description\",\n          component: TextField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          label: \"Date\",\n          placeholder: \"YYYY-MM-DD\",\n          name: \"date\",\n          component: TextField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          label: \"Specialist\",\n          placeholder: \"Specialist who conducted the appt\",\n          name: \"specialist\",\n          component: TextField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), values.type === \"OccupationalHealthcare\" && /*#__PURE__*/_jsxDEV(Field, {\n          label: \"Employer Name\",\n          placeholder: \"Employer Name\",\n          name: \"employerName\",\n          component: TextField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(DiagnosisSelection, {\n          setFieldValue: setFieldValue,\n          setFieldTouched: setFieldTouched,\n          diagnoses: Object.values(diagnoses)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n            floated: \"left\",\n            width: 5,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              onClick: onCancel,\n              color: \"red\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n            floated: \"right\",\n            width: 5,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              floated: \"right\",\n              color: \"green\",\n              disabled: !dirty || !isValid,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddEntryForm, \"wJ75htrn8DHDKCcC5XPPFvOTjE8=\", false, function () {\n  return [useStateValue];\n});\n\n_c = AddEntryForm;\nexport default AddEntryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEntryForm\");","map":{"version":3,"names":["React","Grid","Button","Field","Formik","Form","TextField","SelectField","DiagnosisSelection","EntryTypes","HealthCheckRating","useStateValue","typeOptions","value","Healthcheck","label","Hospital","OccupationalHealthcare","ratingOptions","Healthy","LowRisk","HighRisk","CriticalRisk","AddEntryForm","onSubmit","onCancel","diagnoses","type","healthCheckRating","description","date","specialist","values","requiredError","errors","isValid","dirty","setFieldValue","setFieldTouched","Object"],"sources":["/Users/abigailnottingham/HTML Projects/fullstack_open/part9_c_patientor_frontend/patientor/src/AddEntryModal/AddEntryForm.tsx"],"sourcesContent":["import React from \"react\";\nimport { Grid, Button } from \"semantic-ui-react\";\nimport { Field, Formik, Form } from \"formik\";\n\nimport { TextField, SelectField, TypeOption, HealthCheckRatingOption, DiagnosisSelection } from \"./FormField\";\nimport { EntryTypes, HealthCheckEntry, HealthCheckRating, HospitalEntry, OccupationalHealthcareEntry } from \"../types\";\nimport { useStateValue } from \"../state\";\n\nexport type EntryFormValues = Omit<HealthCheckEntry, \"id\"> | Omit<HospitalEntry, \"id\"> | Omit<OccupationalHealthcareEntry, \"id\">;\n\ninterface Props {\n  onSubmit: (values: EntryFormValues) => void;\n  onCancel: () => void;\n}\n\nconst typeOptions: TypeOption[] = [\n  { value: EntryTypes.Healthcheck, label: \"Healthcheck\" },\n  { value: EntryTypes.Hospital, label: \"Hospital\" },\n  { value: EntryTypes.OccupationalHealthcare, label: \"Occupational Healthcare\" }\n];\nconst ratingOptions: HealthCheckRatingOption[] = [\n  { value: HealthCheckRating.Healthy, label: \"Healthy\" },\n  { value: HealthCheckRating.LowRisk, label: \"Low Risk\" },\n  { value: HealthCheckRating.HighRisk, label: \"High Risk\" },\n  { value: HealthCheckRating.CriticalRisk, label: \"Critcal Risk\" }\n];\n\nexport const AddEntryForm = ({ onSubmit, onCancel } : Props ) => {\n  const [{ diagnoses }] = useStateValue();\n\n  return (\n    <Formik\n      initialValues={{\n        type: \"HealthCheck\",\n        healthCheckRating: 0,\n        // type: EntryTypes.Healthcheck,\n        // healthCheckRating: HealthCheckRating.Healthy,\n        description: \"\",\n        date: \"\",\n        specialist: \"\",\n      }}\n      onSubmit={onSubmit}\n      validate={values => {\n        const requiredError = \"Field is required\";\n        const errors: { [field: string]: string } = {};\n        if (!values.description) {\n          errors.description = requiredError;\n        }\n        if (!values.date) {\n          errors.date = requiredError;\n        }\n        if (!values.specialist) {\n          errors.specialist = requiredError;\n        }\n        return errors;\n      }}\n    >\n      {({ isValid, dirty, setFieldValue, setFieldTouched, values }) => {\n        return (\n          <Form className=\"form ui\">\n            <SelectField\n              label=\"Type\"\n              name=\"type\"\n              options={typeOptions}\n            />\n\n            {values.type === \"HealthCheck\" && (\n              <SelectField\n                label=\"HealthCheckRating\"\n                name=\"healthCheckRating\"\n                options={ratingOptions}\n              />\n            )}\n\n            <Field\n              label=\"Description\"\n              placeholder=\"Describe any symptoms or notes from the appt\"\n              name=\"description\"\n              component={TextField}\n            />\n            <Field\n              label=\"Date\"\n              placeholder=\"YYYY-MM-DD\"\n              name=\"date\"\n              component={TextField}\n            />\n            <Field\n              label=\"Specialist\"\n              placeholder=\"Specialist who conducted the appt\"\n              name=\"specialist\"\n              component={TextField}\n            />\n\n            {values.type === \"OccupationalHealthcare\" && (\n              <Field\n                label=\"Employer Name\"\n                placeholder=\"Employer Name\"\n                name=\"employerName\"\n                component={TextField}\n              />\n            )}\n\n            <DiagnosisSelection            \n              setFieldValue={setFieldValue}            \n              setFieldTouched={setFieldTouched}            \n              diagnoses={Object.values(diagnoses)}          \n            />    \n            \n            <Grid>\n              <Grid.Column floated=\"left\" width={5}>\n                <Button type=\"button\" onClick={onCancel} color=\"red\">\n                  Cancel\n                </Button>\n              </Grid.Column>\n              <Grid.Column floated=\"right\" width={5}>\n                <Button\n                  type=\"submit\"\n                  floated=\"right\"\n                  color=\"green\"\n                  disabled={!dirty || !isValid}\n                >\n                  Add\n                </Button>\n              </Grid.Column>\n            </Grid>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default AddEntryForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}