{"ast":null,"code":"export let HealthCheckRating;\n\n(function (HealthCheckRating) {\n  HealthCheckRating[HealthCheckRating[\"Healthy\"] = 0] = \"Healthy\";\n  HealthCheckRating[HealthCheckRating[\"LowRisk\"] = 1] = \"LowRisk\";\n  HealthCheckRating[HealthCheckRating[\"HighRisk\"] = 2] = \"HighRisk\";\n  HealthCheckRating[HealthCheckRating[\"CriticalRisk\"] = 3] = \"CriticalRisk\";\n})(HealthCheckRating || (HealthCheckRating = {}));\n\nexport let Gender;\n\n(function (Gender) {\n  Gender[\"Male\"] = \"male\";\n  Gender[\"Female\"] = \"female\";\n  Gender[\"Other\"] = \"other\";\n})(Gender || (Gender = {}));\n\nexport let EntryTypes;\n\n(function (EntryTypes) {\n  EntryTypes[\"Healthcheck\"] = \"HealthCheck\";\n  EntryTypes[\"Hospital\"] = \"Hospital\";\n  EntryTypes[\"OccupationalHealthcare\"] = \"OccupationalHealthcare\";\n})(EntryTypes || (EntryTypes = {}));","map":{"version":3,"names":["HealthCheckRating","Gender","EntryTypes"],"sources":["/Users/abigailnottingham/HTML Projects/fullstack_open/part9_c_patientor_frontend/patientor/src/types.ts"],"sourcesContent":["export interface Diagnosis {\n  code: string;\n  name: string;\n  latin?: string;\n}\n\ninterface BaseEntry {\n  id: string;\n  description: string;\n  date: string;\n  specialist: string;\n  diagnosisCodes?: Array<Diagnosis['code']>;\n}\n\nexport enum HealthCheckRating {\n  \"Healthy\" = 0,\n  \"LowRisk\" = 1,\n  \"HighRisk\" = 2,\n  \"CriticalRisk\" = 3\n}\n\ninterface Discharge {\n  date: string;\n  criteria: string;\n}\n\ninterface SickLeave {\n  startDate: string;\n  endDate?: string;\n}\n\nexport interface HealthCheckEntry extends BaseEntry {\n  type: 'HealthCheck';\n  healthCheckRating: HealthCheckRating;\n}\n\nexport interface HospitalEntry extends BaseEntry {\n  type: 'Hospital';\n  discharge: Discharge;\n}\n\nexport interface OccupationalHealthcareEntry extends BaseEntry {\n  type: 'OccupationalHealthcare';\n  employerName: string;\n  sickLeave?: SickLeave;\n}\n\nexport type Entry =\n  | HospitalEntry\n  | OccupationalHealthcareEntry\n  | HealthCheckEntry;\n\nexport enum Gender {\n  Male = \"male\",\n  Female = \"female\",\n  Other = \"other\"\n}\n\nexport enum EntryTypes {\n  Healthcheck = 'HealthCheck',\n  Hospital = 'Hospital',\n  OccupationalHealthcare = 'OccupationalHealthcare'\n}\n\nexport interface Patient {\n  id: string;\n  name: string;\n  occupation: string;\n  gender: Gender;\n  ssn?: string;\n  dateOfBirth?: string;\n  entries?: Entry[];\n}\n"],"mappings":"AAcA,WAAYA,iBAAZ;;WAAYA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;GAAAA,iB,KAAAA,iB;;AAsCZ,WAAYC,MAAZ;;WAAYA,M;EAAAA,M;EAAAA,M;EAAAA,M;GAAAA,M,KAAAA,M;;AAMZ,WAAYC,UAAZ;;WAAYA,U;EAAAA,U;EAAAA,U;EAAAA,U;GAAAA,U,KAAAA,U"},"metadata":{},"sourceType":"module"}